{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahab Siddique\\\\Desktop\\\\Doctro App\\\\doctro\\\\src\\\\pages\\\\AmbulanceDetailsPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import { useParams } from 'react-router-dom';\n// import './AmbulanceDetailsPage.css';\n\n// const AmbulanceDetailsPage = () => {\n//   const { ambulanceId } = useParams();\n//   const ambulance = ambulanceData.find((a) => a.id === parseInt(ambulanceId));\n//   const [bookingSuccess, setBookingSuccess] = useState(false);\n//   const [showMap, setShowMap] = useState(false); // Added showMap state\n//   const [destination, setDestination] = useState(null);\n//   const mapRef = useRef(null); // Ref for the map container\n\n//   // Step 1: Load Google Maps API script\n//   useEffect(() => {\n//     if (window.google) {\n//       initMap();\n//       return;\n//     }\n\n//     const loadGoogleMaps = () => {\n//       const script = document.createElement(\"script\");\n//       script.src = `https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap`; // Use your actual API key here\n//       script.async = true;\n//       script.defer = true;\n//       script.onload = () => initMap(); // Initialize map once the script loads\n//       script.onerror = (error) => console.error('Google Maps script failed to load:', error);\n//       document.body.appendChild(script);\n//     };\n\n//     loadGoogleMaps(); // Load the script when the component mounts\n\n//     // Cleanup: Remove the script from the body when the component unmounts\n//     return () => {\n//       const script = document.querySelector(`script[src^=\"https://maps.googleapis.com/maps/api/js?key=\"]`);\n//       if (script) {\n//         script.remove();\n//       }\n//     };\n//   }, []);\n\n//   const initMap = () => {\n//     if (!window.google) {\n//       console.error('Google Maps API not loaded');\n//       return;\n//     }\n\n//     // Create a new Google Map\n//     const map = new google.maps.Map(mapRef.current, {\n//       center: { lat: ambulance.location.lat, lng: ambulance.location.lng }, // Use ambulance's location\n//       zoom: 12,\n//     });\n\n//     // Create a marker for the ambulance\n//     const ambulanceStart = new google.maps.LatLng(ambulance.location.lat, ambulance.location.lng);\n//     const ambulanceMarker = new google.maps.Marker({\n//       position: ambulanceStart,\n//       map: map,\n//       title: 'Ambulance Location',\n//       icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',\n//     });\n\n//     // If destination is set, create a route\n//     if (destination) {\n//       const directionsService = new google.maps.DirectionsService();\n//       const directionsRenderer = new google.maps.DirectionsRenderer();\n//       directionsRenderer.setMap(map);\n\n//       const destinationLatLng = new google.maps.LatLng(destination.lat, destination.lng);\n\n//       // Request directions to destination\n//       directionsService.route(\n//         {\n//           origin: ambulanceStart,\n//           destination: destinationLatLng,\n//           travelMode: google.maps.TravelMode.DRIVING,\n//         },\n//         (result, status) => {\n//           if (status === google.maps.DirectionsStatus.OK) {\n//             directionsRenderer.setDirections(result);\n//           } else {\n//             console.error('Directions request failed:', status);\n//           }\n//         }\n//       );\n//     }\n//   };\n\n//   const handleBookingSubmit = (e) => {\n//     e.preventDefault();\n//     setBookingSuccess(true);\n//     setTimeout(() => {\n//       setBookingSuccess(false);\n//     }, 3000); // Show success message for 3 seconds\n//   };\n\n//   const handleTrackButtonClick = () => {\n//     setDestination({ lat: 12.9716, lng: 77.6356 }); // Example destination coordinates\n//     setShowMap(true); // Show map when \"Track Ambulance\" button is clicked\n//   };\n\n//   if (!ambulance) {\n//     return <h1>Ambulance not found!</h1>;\n//   }\n\n//   return (\n//     <div className=\"ambulance-details-page\">\n//       <h1 className=\"ambulance-name\">{ambulance.name}</h1>\n\n//       <div className=\"ambulance-images\">\n//         <img src={ambulance.image1} alt={`${ambulance.name} view 1`} className=\"ambulance-image\" />\n//         <img src={ambulance.image2} alt={`${ambulance.name} view 2`} className=\"ambulance-image\" />\n//       </div>\n\n//       <p className=\"ambulance-contact\">\n//         <strong>Contact:</strong> {ambulance.contact}\n//       </p>\n//       <p className=\"ambulance-location\">\n//         <strong>Location:</strong> {ambulance.location}\n//       </p>\n\n//       <h2 className=\"section-heading\">Facilities</h2>\n//       <ul className=\"ambulance-facilities\">\n//         <li>24/7 Availability</li>\n//         <li>Emergency Medical Assistance</li>\n//         <li>Equipped with Oxygen Cylinders</li>\n//         <li>First Aid Kits</li>\n//         <li>Basic and Advanced Life Support</li>\n//       </ul>\n\n//       <h2 className=\"section-heading\">Book Ambulance</h2>\n//       <form className=\"booking-form\" onSubmit={handleBookingSubmit}>\n//         <label>\n//           Name:\n//           <input type=\"text\" required />\n//         </label>\n//         <label>\n//           Contact:\n//           <input type=\"text\" required />\n//         </label>\n//         <label>\n//           Address:\n//           <input type=\"text\" required />\n//         </label>\n//         <button type=\"submit\">Submit</button>\n\n//         <button\n//           type=\"button\"\n//           className=\"track-location-button\"\n//           onClick={handleTrackButtonClick} // Trigger map and marker movement\n//         >\n//           Track Ambulance\n//         </button>\n//       </form>\n\n//       {showMap && (\n//         <div className=\"map-preview\">\n//           <h3>Ambulance Location</h3>\n//           <div ref={mapRef} className=\"map-container\" style={{ width: '100%', height: '300px' }}></div>\n//         </div>\n//       )}\n\n//       {bookingSuccess && <div className=\"alert\">Ambulance service request submitted!</div>}\n//     </div>\n//   );\n// };\n\n// export default AmbulanceDetailsPage;\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ambulanceData } from './Ambulancedata';\nimport './AmbulanceDetailsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AmbulanceDetailsPage = () => {\n  _s();\n  const {\n    ambulanceId\n  } = useParams();\n  const ambulance = ambulanceData.find(a => a.id === parseInt(ambulanceId));\n  const [bookingSuccess, setBookingSuccess] = useState(false);\n  const [isTrackingEnabled, setIsTrackingEnabled] = useState(false); // Track button enabled/disabled\n\n  const handleBookingSubmit = e => {\n    e.preventDefault();\n    setBookingSuccess(true);\n\n    // Enable the tracking button after form submission\n    setIsTrackingEnabled(true);\n    setTimeout(() => {\n      setBookingSuccess(false);\n    }, 3000); // Show alert for 3 seconds\n  };\n  const handleTrackButtonClick = () => {\n    alert(`The ambulance is starting from: ${ambulance.location}`);\n  };\n  if (!ambulance) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ambulance not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ambulance-details-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ambulance-name\",\n      children: ambulance.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ambulance-images\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: ambulance.image1,\n        alt: `${ambulance.name} view 1`,\n        className: \"ambulance-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ambulance.image2,\n        alt: `${ambulance.name} view 2`,\n        className: \"ambulance-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ambulance-contact\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Contact:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), \" \", ambulance.contact]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ambulance-location\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), \" \", ambulance.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-heading\",\n      children: \"Facilities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ambulance-facilities\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"24/7 Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Emergency Medical Assistance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Equipped with Oxygen Cylinders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"First Aid Kits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Basic and Advanced Life Support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-heading\",\n      children: \"Book Ambulance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"booking-form\",\n      onSubmit: handleBookingSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Contact:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"track-location-button\",\n      onClick: handleTrackButtonClick,\n      disabled: !isTrackingEnabled // Disable button until form is submitted\n      ,\n      children: \"Track Ambulance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), bookingSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert\",\n      children: \"Ambulance service request submitted!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(AmbulanceDetailsPage, \"KoZ1X3SDd8gZKtWkQfKr2xJeWF8=\", false, function () {\n  return [useParams];\n});\n_c = AmbulanceDetailsPage;\nexport default AmbulanceDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"AmbulanceDetailsPage\");","map":{"version":3,"names":["React","useState","useParams","ambulanceData","jsxDEV","_jsxDEV","AmbulanceDetailsPage","_s","ambulanceId","ambulance","find","a","id","parseInt","bookingSuccess","setBookingSuccess","isTrackingEnabled","setIsTrackingEnabled","handleBookingSubmit","e","preventDefault","setTimeout","handleTrackButtonClick","alert","location","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","src","image1","alt","image2","contact","onSubmit","type","required","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Shahab Siddique/Desktop/Doctro App/doctro/src/pages/AmbulanceDetailsPage.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import './AmbulanceDetailsPage.css';\r\n\r\n// const AmbulanceDetailsPage = () => {\r\n//   const { ambulanceId } = useParams();\r\n//   const ambulance = ambulanceData.find((a) => a.id === parseInt(ambulanceId));\r\n//   const [bookingSuccess, setBookingSuccess] = useState(false);\r\n//   const [showMap, setShowMap] = useState(false); // Added showMap state\r\n//   const [destination, setDestination] = useState(null);\r\n//   const mapRef = useRef(null); // Ref for the map container\r\n\r\n//   // Step 1: Load Google Maps API script\r\n//   useEffect(() => {\r\n//     if (window.google) {\r\n//       initMap();\r\n//       return;\r\n//     }\r\n\r\n//     const loadGoogleMaps = () => {\r\n//       const script = document.createElement(\"script\");\r\n//       script.src = `https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap`; // Use your actual API key here\r\n//       script.async = true;\r\n//       script.defer = true;\r\n//       script.onload = () => initMap(); // Initialize map once the script loads\r\n//       script.onerror = (error) => console.error('Google Maps script failed to load:', error);\r\n//       document.body.appendChild(script);\r\n//     };\r\n\r\n//     loadGoogleMaps(); // Load the script when the component mounts\r\n\r\n//     // Cleanup: Remove the script from the body when the component unmounts\r\n//     return () => {\r\n//       const script = document.querySelector(`script[src^=\"https://maps.googleapis.com/maps/api/js?key=\"]`);\r\n//       if (script) {\r\n//         script.remove();\r\n//       }\r\n//     };\r\n//   }, []);\r\n\r\n//   const initMap = () => {\r\n//     if (!window.google) {\r\n//       console.error('Google Maps API not loaded');\r\n//       return;\r\n//     }\r\n\r\n//     // Create a new Google Map\r\n//     const map = new google.maps.Map(mapRef.current, {\r\n//       center: { lat: ambulance.location.lat, lng: ambulance.location.lng }, // Use ambulance's location\r\n//       zoom: 12,\r\n//     });\r\n\r\n//     // Create a marker for the ambulance\r\n//     const ambulanceStart = new google.maps.LatLng(ambulance.location.lat, ambulance.location.lng);\r\n//     const ambulanceMarker = new google.maps.Marker({\r\n//       position: ambulanceStart,\r\n//       map: map,\r\n//       title: 'Ambulance Location',\r\n//       icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',\r\n//     });\r\n\r\n//     // If destination is set, create a route\r\n//     if (destination) {\r\n//       const directionsService = new google.maps.DirectionsService();\r\n//       const directionsRenderer = new google.maps.DirectionsRenderer();\r\n//       directionsRenderer.setMap(map);\r\n\r\n//       const destinationLatLng = new google.maps.LatLng(destination.lat, destination.lng);\r\n\r\n//       // Request directions to destination\r\n//       directionsService.route(\r\n//         {\r\n//           origin: ambulanceStart,\r\n//           destination: destinationLatLng,\r\n//           travelMode: google.maps.TravelMode.DRIVING,\r\n//         },\r\n//         (result, status) => {\r\n//           if (status === google.maps.DirectionsStatus.OK) {\r\n//             directionsRenderer.setDirections(result);\r\n//           } else {\r\n//             console.error('Directions request failed:', status);\r\n//           }\r\n//         }\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const handleBookingSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     setBookingSuccess(true);\r\n//     setTimeout(() => {\r\n//       setBookingSuccess(false);\r\n//     }, 3000); // Show success message for 3 seconds\r\n//   };\r\n\r\n//   const handleTrackButtonClick = () => {\r\n//     setDestination({ lat: 12.9716, lng: 77.6356 }); // Example destination coordinates\r\n//     setShowMap(true); // Show map when \"Track Ambulance\" button is clicked\r\n//   };\r\n\r\n//   if (!ambulance) {\r\n//     return <h1>Ambulance not found!</h1>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"ambulance-details-page\">\r\n//       <h1 className=\"ambulance-name\">{ambulance.name}</h1>\r\n\r\n//       <div className=\"ambulance-images\">\r\n//         <img src={ambulance.image1} alt={`${ambulance.name} view 1`} className=\"ambulance-image\" />\r\n//         <img src={ambulance.image2} alt={`${ambulance.name} view 2`} className=\"ambulance-image\" />\r\n//       </div>\r\n\r\n//       <p className=\"ambulance-contact\">\r\n//         <strong>Contact:</strong> {ambulance.contact}\r\n//       </p>\r\n//       <p className=\"ambulance-location\">\r\n//         <strong>Location:</strong> {ambulance.location}\r\n//       </p>\r\n\r\n//       <h2 className=\"section-heading\">Facilities</h2>\r\n//       <ul className=\"ambulance-facilities\">\r\n//         <li>24/7 Availability</li>\r\n//         <li>Emergency Medical Assistance</li>\r\n//         <li>Equipped with Oxygen Cylinders</li>\r\n//         <li>First Aid Kits</li>\r\n//         <li>Basic and Advanced Life Support</li>\r\n//       </ul>\r\n\r\n//       <h2 className=\"section-heading\">Book Ambulance</h2>\r\n//       <form className=\"booking-form\" onSubmit={handleBookingSubmit}>\r\n//         <label>\r\n//           Name:\r\n//           <input type=\"text\" required />\r\n//         </label>\r\n//         <label>\r\n//           Contact:\r\n//           <input type=\"text\" required />\r\n//         </label>\r\n//         <label>\r\n//           Address:\r\n//           <input type=\"text\" required />\r\n//         </label>\r\n//         <button type=\"submit\">Submit</button>\r\n\r\n//         <button\r\n//           type=\"button\"\r\n//           className=\"track-location-button\"\r\n//           onClick={handleTrackButtonClick} // Trigger map and marker movement\r\n//         >\r\n//           Track Ambulance\r\n//         </button>\r\n//       </form>\r\n\r\n//       {showMap && (\r\n//         <div className=\"map-preview\">\r\n//           <h3>Ambulance Location</h3>\r\n//           <div ref={mapRef} className=\"map-container\" style={{ width: '100%', height: '300px' }}></div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {bookingSuccess && <div className=\"alert\">Ambulance service request submitted!</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AmbulanceDetailsPage;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ambulanceData } from './Ambulancedata';\r\nimport './AmbulanceDetailsPage.css';\r\n\r\nconst AmbulanceDetailsPage = () => {\r\n  const { ambulanceId } = useParams();\r\n  const ambulance = ambulanceData.find((a) => a.id === parseInt(ambulanceId));\r\n  const [bookingSuccess, setBookingSuccess] = useState(false);\r\n  const [isTrackingEnabled, setIsTrackingEnabled] = useState(false); // Track button enabled/disabled\r\n\r\n  const handleBookingSubmit = (e) => {\r\n    e.preventDefault();\r\n    setBookingSuccess(true);\r\n\r\n    // Enable the tracking button after form submission\r\n    setIsTrackingEnabled(true);\r\n\r\n    setTimeout(() => {\r\n      setBookingSuccess(false);\r\n    }, 3000); // Show alert for 3 seconds\r\n  };\r\n\r\n  const handleTrackButtonClick = () => {\r\n    alert(`The ambulance is starting from: ${ambulance.location}`);\r\n  };\r\n\r\n  if (!ambulance) {\r\n    return <h1>Ambulance not found!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"ambulance-details-page\">\r\n      <h1 className=\"ambulance-name\">{ambulance.name}</h1>\r\n\r\n      {/* Ambulance Images */}\r\n      <div className=\"ambulance-images\">\r\n        <img\r\n          src={ambulance.image1}\r\n          alt={`${ambulance.name} view 1`}\r\n          className=\"ambulance-image\"\r\n        />\r\n        <img\r\n          src={ambulance.image2}\r\n          alt={`${ambulance.name} view 2`}\r\n          className=\"ambulance-image\"\r\n        />\r\n      </div>\r\n\r\n      {/* Ambulance Info */}\r\n      <p className=\"ambulance-contact\">\r\n        <strong>Contact:</strong> {ambulance.contact}\r\n      </p>\r\n      <p className=\"ambulance-location\">\r\n        <strong>Location:</strong> {ambulance.location}\r\n      </p>\r\n\r\n      <h2 className=\"section-heading\">Facilities</h2>\r\n      <ul className=\"ambulance-facilities\">\r\n        <li>24/7 Availability</li>\r\n        <li>Emergency Medical Assistance</li>\r\n        <li>Equipped with Oxygen Cylinders</li>\r\n        <li>First Aid Kits</li>\r\n        <li>Basic and Advanced Life Support</li>\r\n      </ul>\r\n\r\n      {/* Booking Form */}\r\n      <h2 className=\"section-heading\">Book Ambulance</h2>\r\n      <form\r\n        className=\"booking-form\"\r\n        onSubmit={handleBookingSubmit}\r\n      >\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" required />\r\n        </label>\r\n        <label>\r\n          Contact:\r\n          <input type=\"text\" required />\r\n        </label>\r\n        <label>\r\n          Address:\r\n          <input type=\"text\" required />\r\n        </label>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      {/* Track Ambulance Location Button */}\r\n      <button\r\n        type=\"button\"\r\n        className=\"track-location-button\"\r\n        onClick={handleTrackButtonClick}\r\n        disabled={!isTrackingEnabled} // Disable button until form is submitted\r\n      >\r\n        Track Ambulance\r\n      </button>\r\n\r\n      {/* Success Alert */}\r\n      {bookingSuccess && (\r\n        <div className=\"alert\">Ambulance service request submitted!</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AmbulanceDetailsPage;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAY,CAAC,GAAGN,SAAS,CAAC,CAAC;EACnC,MAAMO,SAAS,GAAGN,aAAa,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKC,QAAQ,CAACL,WAAW,CAAC,CAAC;EAC3E,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,Q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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}