{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahab Siddique\\\\Desktop\\\\Doctro App\\\\doctro\\\\src\\\\pages\\\\AmbulanceDetailsPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import { useParams } from 'react-router-dom';\n// import './AmbulanceDetailsPage.css';\n\n// const AmbulanceDetailsPage = () => {\n//   const { ambulanceId } = useParams();\n//   const ambulance = ambulanceData.find((a) => a.id === parseInt(ambulanceId));\n//   const [bookingSuccess, setBookingSuccess] = useState(false);\n//   const [showMap, setShowMap] = useState(false); // Added showMap state\n//   const [destination, setDestination] = useState(null);\n//   const mapRef = useRef(null); // Ref for the map container\n\n//   // Step 1: Load Google Maps API script\n//   useEffect(() => {\n//     if (window.google) {\n//       initMap();\n//       return;\n//     }\n\n//     const loadGoogleMaps = () => {\n//       const script = document.createElement(\"script\");\n//       script.src = `https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap`; // Use your actual API key here\n//       script.async = true;\n//       script.defer = true;\n//       script.onload = () => initMap(); // Initialize map once the script loads\n//       script.onerror = (error) => console.error('Google Maps script failed to load:', error);\n//       document.body.appendChild(script);\n//     };\n\n//     loadGoogleMaps(); // Load the script when the component mounts\n\n//     // Cleanup: Remove the script from the body when the component unmounts\n//     return () => {\n//       const script = document.querySelector(`script[src^=\"https://maps.googleapis.com/maps/api/js?key=\"]`);\n//       if (script) {\n//         script.remove();\n//       }\n//     };\n//   }, []);\n\n//   const initMap = () => {\n//     if (!window.google) {\n//       console.error('Google Maps API not loaded');\n//       return;\n//     }\n\n//     // Create a new Google Map\n//     const map = new google.maps.Map(mapRef.current, {\n//       center: { lat: ambulance.location.lat, lng: ambulance.location.lng }, // Use ambulance's location\n//       zoom: 12,\n//     });\n\n//     // Create a marker for the ambulance\n//     const ambulanceStart = new google.maps.LatLng(ambulance.location.lat, ambulance.location.lng);\n//     const ambulanceMarker = new google.maps.Marker({\n//       position: ambulanceStart,\n//       map: map,\n//       title: 'Ambulance Location',\n//       icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',\n//     });\n\n//     // If destination is set, create a route\n//     if (destination) {\n//       const directionsService = new google.maps.DirectionsService();\n//       const directionsRenderer = new google.maps.DirectionsRenderer();\n//       directionsRenderer.setMap(map);\n\n//       const destinationLatLng = new google.maps.LatLng(destination.lat, destination.lng);\n\n//       // Request directions to destination\n//       directionsService.route(\n//         {\n//           origin: ambulanceStart,\n//           destination: destinationLatLng,\n//           travelMode: google.maps.TravelMode.DRIVING,\n//         },\n//         (result, status) => {\n//           if (status === google.maps.DirectionsStatus.OK) {\n//             directionsRenderer.setDirections(result);\n//           } else {\n//             console.error('Directions request failed:', status);\n//           }\n//         }\n//       );\n//     }\n//   };\n\n//   const handleBookingSubmit = (e) => {\n//     e.preventDefault();\n//     setBookingSuccess(true);\n//     setTimeout(() => {\n//       setBookingSuccess(false);\n//     }, 3000); // Show success message for 3 seconds\n//   };\n\n//   const handleTrackButtonClick = () => {\n//     setDestination({ lat: 12.9716, lng: 77.6356 }); // Example destination coordinates\n//     setShowMap(true); // Show map when \"Track Ambulance\" button is clicked\n//   };\n\n//   if (!ambulance) {\n//     return <h1>Ambulance not found!</h1>;\n//   }\n\n//   return (\n//     <div className=\"ambulance-details-page\">\n//       <h1 className=\"ambulance-name\">{ambulance.name}</h1>\n\n//       <div className=\"ambulance-images\">\n//         <img src={ambulance.image1} alt={`${ambulance.name} view 1`} className=\"ambulance-image\" />\n//         <img src={ambulance.image2} alt={`${ambulance.name} view 2`} className=\"ambulance-image\" />\n//       </div>\n\n//       <p className=\"ambulance-contact\">\n//         <strong>Contact:</strong> {ambulance.contact}\n//       </p>\n//       <p className=\"ambulance-location\">\n//         <strong>Location:</strong> {ambulance.location}\n//       </p>\n\n//       <h2 className=\"section-heading\">Facilities</h2>\n//       <ul className=\"ambulance-facilities\">\n//         <li>24/7 Availability</li>\n//         <li>Emergency Medical Assistance</li>\n//         <li>Equipped with Oxygen Cylinders</li>\n//         <li>First Aid Kits</li>\n//         <li>Basic and Advanced Life Support</li>\n//       </ul>\n\n//       <h2 className=\"section-heading\">Book Ambulance</h2>\n//       <form className=\"booking-form\" onSubmit={handleBookingSubmit}>\n//         <label>\n//           Name:\n//           <input type=\"text\" required />\n//         </label>\n//         <label>\n//           Contact:\n//           <input type=\"text\" required />\n//         </label>\n//         <label>\n//           Address:\n//           <input type=\"text\" required />\n//         </label>\n//         <button type=\"submit\">Submit</button>\n\n//         <button\n//           type=\"button\"\n//           className=\"track-location-button\"\n//           onClick={handleTrackButtonClick} // Trigger map and marker movement\n//         >\n//           Track Ambulance\n//         </button>\n//       </form>\n\n//       {showMap && (\n//         <div className=\"map-preview\">\n//           <h3>Ambulance Location</h3>\n//           <div ref={mapRef} className=\"map-container\" style={{ width: '100%', height: '300px' }}></div>\n//         </div>\n//       )}\n\n//       {bookingSuccess && <div className=\"alert\">Ambulance service request submitted!</div>}\n//     </div>\n//   );\n// };\n\n// export default AmbulanceDetailsPage;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ambulanceData } from './Ambulancedata';\nimport './AmbulanceDetailsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AmbulanceDetailsPage = () => {\n  _s();\n  const {\n    ambulanceId\n  } = useParams();\n  const ambulance = ambulanceData.find(a => a.id === parseInt(ambulanceId));\n  const [bookingSuccess, setBookingSuccess] = useState(false);\n  const [isTrackingEnabled, setIsTrackingEnabled] = useState(false);\n  const [userAddress, setUserAddress] = useState('');\n  const [showAlert, setShowAlert] = useState(false);\n  const [estimatedTime, setEstimatedTime] = useState('');\n\n  // Example array of time options\n  const times = [\"5 min\", \"10 min\", \"15 min\", \"20 min\", \"30 min\"];\n\n  // Shuffle the time every 3 seconds using useEffect\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    const shuffleTime = () => {\n      const randomTime = times[Math.floor(Math.random() * times.length)];\n      setEstimatedTime(randomTime);\n    };\n    shuffleTime(); // Initial call to set the time\n    const interval = setInterval(shuffleTime, 3000); // Shuffle every 3 seconds\n\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\n  }); // No need to include `times` since it's constant\n\n  const handleBookingSubmit = e => {\n    e.preventDefault();\n    setBookingSuccess(true);\n    setIsTrackingEnabled(true);\n\n    // Auto-hide success alert after 3 seconds\n    setTimeout(() => {\n      setBookingSuccess(false);\n    }, 3000);\n  };\n  const handleTrackButtonClick = () => {\n    setShowAlert(true);\n\n    // Auto-hide tracking alert after 5 seconds\n    setTimeout(() => {\n      setShowAlert(false);\n    }, 5000);\n  };\n  const closeAlert = () => {\n    setShowAlert(false);\n  };\n  if (!ambulance) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ambulance not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ambulance-details-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ambulance-name\",\n      children: ambulance.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ambulance-images\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: ambulance.image1,\n        alt: `${ambulance.name} view 1`,\n        className: \"ambulance-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ambulance.image2,\n        alt: `${ambulance.name} view 2`,\n        className: \"ambulance-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ambulance-contact\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Contact:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), \" \", ambulance.contact]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ambulance-location\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), \" \", ambulance.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-heading\",\n      children: \"Facilities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ambulance-facilities\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"24/7 Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Emergency Medical Assistance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Equipped with Oxygen Cylinders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"First Aid Kits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Basic and Advanced Life Support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-heading\",\n      children: \"Book Ambulance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"booking-form\",\n      onSubmit: handleBookingSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Contact:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: userAddress,\n          onChange: e => setUserAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `track-location-button ${isTrackingEnabled ? 'enabled' : 'disabled'}`,\n      onClick: handleTrackButtonClick,\n      disabled: !isTrackingEnabled,\n      children: \"\\uD83D\\uDE91 Track Ambulance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"time-display\",\n      className: \"estimated-time\",\n      children: [\"Estimated Arrival Time: \", estimatedTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-alert\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDEA8 Ambulance is On Its Way! \\uD83D\\uDEA8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Starting Point:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 16\n          }, this), \" \", ambulance.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Your Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 16\n          }, this), \" \", userAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Estimated Arrival Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 16\n          }, this), \" \", estimatedTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeAlert,\n          className: \"popup-close\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), bookingSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-alert success\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u2705 Booking Confirmed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ambulance service request submitted successfully.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(AmbulanceDetailsPage, \"+6ObevK2Wa9UByAMPlh/S2BM9TY=\", false, function () {\n  return [useParams];\n});\n_c = AmbulanceDetailsPage;\nexport default AmbulanceDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"AmbulanceDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ambulanceData","jsxDEV","_jsxDEV","AmbulanceDetailsPage","_s","ambulanceId","ambulance","find","a","id","parseInt","bookingSuccess","setBookingSuccess","isTrackingEnabled","setIsTrackingEnabled","userAddress","setUserAddress","showAlert","setShowAlert","estimatedTime","setEstimatedTime","times","shuffleTime","randomTime","Math","floor","random","length","interval","setInterval","clearInterval","handleBookingSubmit","e","preventDefault","setTimeout","handleTrackButtonClick","closeAlert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","src","image1","alt","image2","contact","location","onSubmit","type","required","value","onChange","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Shahab Siddique/Desktop/Doctro App/doctro/src/pages/AmbulanceDetailsPage.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import './AmbulanceDetailsPage.css';\r\n\r\n// const AmbulanceDetailsPage = () => {\r\n//   const { ambulanceId } = useParams();\r\n//   const ambulance = ambulanceData.find((a) => a.id === parseInt(ambulanceId));\r\n//   const [bookingSuccess, setBookingSuccess] = useState(false);\r\n//   const [showMap, setShowMap] = useState(false); // Added showMap state\r\n//   const [destination, setDestination] = useState(null);\r\n//   const mapRef = useRef(null); // Ref for the map container\r\n\r\n//   // Step 1: Load Google Maps API script\r\n//   useEffect(() => {\r\n//     if (window.google) {\r\n//       initMap();\r\n//       return;\r\n//     }\r\n\r\n//     const loadGoogleMaps = () => {\r\n//       const script = document.createElement(\"script\");\r\n//       script.src = `https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap`; // Use your actual API key here\r\n//       script.async = true;\r\n//       script.defer = true;\r\n//       script.onload = () => initMap(); // Initialize map once the script loads\r\n//       script.onerror = (error) => console.error('Google Maps script failed to load:', error);\r\n//       document.body.appendChild(script);\r\n//     };\r\n\r\n//     loadGoogleMaps(); // Load the script when the component mounts\r\n\r\n//     // Cleanup: Remove the script from the body when the component unmounts\r\n//     return () => {\r\n//       const script = document.querySelector(`script[src^=\"https://maps.googleapis.com/maps/api/js?key=\"]`);\r\n//       if (script) {\r\n//         script.remove();\r\n//       }\r\n//     };\r\n//   }, []);\r\n\r\n//   const initMap = () => {\r\n//     if (!window.google) {\r\n//       console.error('Google Maps API not loaded');\r\n//       return;\r\n//     }\r\n\r\n//     // Create a new Google Map\r\n//     const map = new google.maps.Map(mapRef.current, {\r\n//       center: { lat: ambulance.location.lat, lng: ambulance.location.lng }, // Use ambulance's location\r\n//       zoom: 12,\r\n//     });\r\n\r\n//     // Create a marker for the ambulance\r\n//     const ambulanceStart = new google.maps.LatLng(ambulance.location.lat, ambulance.location.lng);\r\n//     const ambulanceMarker = new google.maps.Marker({\r\n//       position: ambulanceStart,\r\n//       map: map,\r\n//       title: 'Ambulance Location',\r\n//       icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',\r\n//     });\r\n\r\n//     // If destination is set, create a route\r\n//     if (destination) {\r\n//       const directionsService = new google.maps.DirectionsService();\r\n//       const directionsRenderer = new google.maps.DirectionsRenderer();\r\n//       directionsRenderer.setMap(map);\r\n\r\n//       const destinationLatLng = new google.maps.LatLng(destination.lat, destination.lng);\r\n\r\n//       // Request directions to destination\r\n//       directionsService.route(\r\n//         {\r\n//           origin: ambulanceStart,\r\n//           destination: destinationLatLng,\r\n//           travelMode: google.maps.TravelMode.DRIVING,\r\n//         },\r\n//         (result, status) => {\r\n//           if (status === google.maps.DirectionsStatus.OK) {\r\n//             directionsRenderer.setDirections(result);\r\n//           } else {\r\n//             console.error('Directions request failed:', status);\r\n//           }\r\n//         }\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const handleBookingSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     setBookingSuccess(true);\r\n//     setTimeout(() => {\r\n//       setBookingSuccess(false);\r\n//     }, 3000); // Show success message for 3 seconds\r\n//   };\r\n\r\n//   const handleTrackButtonClick = () => {\r\n//     setDestination({ lat: 12.9716, lng: 77.6356 }); // Example destination coordinates\r\n//     setShowMap(true); // Show map when \"Track Ambulance\" button is clicked\r\n//   };\r\n\r\n//   if (!ambulance) {\r\n//     return <h1>Ambulance not found!</h1>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"ambulance-details-page\">\r\n//       <h1 className=\"ambulance-name\">{ambulance.name}</h1>\r\n\r\n//       <div className=\"ambulance-images\">\r\n//         <img src={ambulance.image1} alt={`${ambulance.name} view 1`} className=\"ambulance-image\" />\r\n//         <img src={ambulance.image2} alt={`${ambulance.name} view 2`} className=\"ambulance-image\" />\r\n//       </div>\r\n\r\n//       <p className=\"ambulance-contact\">\r\n//         <strong>Contact:</strong> {ambulance.contact}\r\n//       </p>\r\n//       <p className=\"ambulance-location\">\r\n//         <strong>Location:</strong> {ambulance.location}\r\n//       </p>\r\n\r\n//       <h2 className=\"section-heading\">Facilities</h2>\r\n//       <ul className=\"ambulance-facilities\">\r\n//         <li>24/7 Availability</li>\r\n//         <li>Emergency Medical Assistance</li>\r\n//         <li>Equipped with Oxygen Cylinders</li>\r\n//         <li>First Aid Kits</li>\r\n//         <li>Basic and Advanced Life Support</li>\r\n//       </ul>\r\n\r\n//       <h2 className=\"section-heading\">Book Ambulance</h2>\r\n//       <form className=\"booking-form\" onSubmit={handleBookingSubmit}>\r\n//         <label>\r\n//           Name:\r\n//           <input type=\"text\" required />\r\n//         </label>\r\n//         <label>\r\n//           Contact:\r\n//           <input type=\"text\" required />\r\n//         </label>\r\n//         <label>\r\n//           Address:\r\n//           <input type=\"text\" required />\r\n//         </label>\r\n//         <button type=\"submit\">Submit</button>\r\n\r\n//         <button\r\n//           type=\"button\"\r\n//           className=\"track-location-button\"\r\n//           onClick={handleTrackButtonClick} // Trigger map and marker movement\r\n//         >\r\n//           Track Ambulance\r\n//         </button>\r\n//       </form>\r\n\r\n//       {showMap && (\r\n//         <div className=\"map-preview\">\r\n//           <h3>Ambulance Location</h3>\r\n//           <div ref={mapRef} className=\"map-container\" style={{ width: '100%', height: '300px' }}></div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {bookingSuccess && <div className=\"alert\">Ambulance service request submitted!</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AmbulanceDetailsPage;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ambulanceData } from './Ambulancedata';\r\nimport './AmbulanceDetailsPage.css';\r\n\r\nconst AmbulanceDetailsPage = () => {\r\n  const { ambulanceId } = useParams();\r\n  const ambulance = ambulanceData.find((a) => a.id === parseInt(ambulanceId));\r\n  const [bookingSuccess, setBookingSuccess] = useState(false);\r\n  const [isTrackingEnabled, setIsTrackingEnabled] = useState(false);\r\n  const [userAddress, setUserAddress] = useState('');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [estimatedTime, setEstimatedTime] = useState('');\r\n\r\n  // Example array of time options\r\n  const times = [\"5 min\", \"10 min\", \"15 min\", \"20 min\", \"30 min\"];\r\n\r\n  // Shuffle the time every 3 seconds using useEffect\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => {\r\n    const shuffleTime = () => {\r\n      const randomTime = times[Math.floor(Math.random() * times.length)];\r\n      setEstimatedTime(randomTime);\r\n    };\r\n\r\n    shuffleTime(); // Initial call to set the time\r\n    const interval = setInterval(shuffleTime, 3000); // Shuffle every 3 seconds\r\n\r\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\r\n  }, ); // No need to include `times` since it's constant\r\n\r\n  const handleBookingSubmit = (e) => {\r\n    e.preventDefault();\r\n    setBookingSuccess(true);\r\n    setIsTrackingEnabled(true);\r\n\r\n    // Auto-hide success alert after 3 seconds\r\n    setTimeout(() => {\r\n      setBookingSuccess(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleTrackButtonClick = () => {\r\n    setShowAlert(true);\r\n\r\n    // Auto-hide tracking alert after 5 seconds\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 5000);\r\n  };\r\n\r\n  const closeAlert = () => {\r\n    setShowAlert(false);\r\n  };\r\n\r\n  if (!ambulance) {\r\n    return <h1>Ambulance not found!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"ambulance-details-page\">\r\n      <h1 className=\"ambulance-name\">{ambulance.name}</h1>\r\n\r\n      {/* Ambulance Images */}\r\n      <div className=\"ambulance-images\">\r\n        <img src={ambulance.image1} alt={`${ambulance.name} view 1`} className=\"ambulance-image\" />\r\n        <img src={ambulance.image2} alt={`${ambulance.name} view 2`} className=\"ambulance-image\" />\r\n      </div>\r\n\r\n      {/* Ambulance Info */}\r\n      <p className=\"ambulance-contact\">\r\n        <strong>Contact:</strong> {ambulance.contact}\r\n      </p>\r\n      <p className=\"ambulance-location\">\r\n        <strong>Location:</strong> {ambulance.location}\r\n      </p>\r\n\r\n      <h2 className=\"section-heading\">Facilities</h2>\r\n      <ul className=\"ambulance-facilities\">\r\n        <li>24/7 Availability</li>\r\n        <li>Emergency Medical Assistance</li>\r\n        <li>Equipped with Oxygen Cylinders</li>\r\n        <li>First Aid Kits</li>\r\n        <li>Basic and Advanced Life Support</li>\r\n      </ul>\r\n\r\n      {/* Booking Form */}\r\n      <h2 className=\"section-heading\">Book Ambulance</h2>\r\n      <form className=\"booking-form\" onSubmit={handleBookingSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" required />\r\n        </label>\r\n        <label>\r\n          Contact:\r\n          <input type=\"text\" required />\r\n        </label>\r\n        <label>\r\n          Address:\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            value={userAddress}\r\n            onChange={(e) => setUserAddress(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      {/* Track Ambulance Location Button */}\r\n      <button\r\n        type=\"button\"\r\n        className={`track-location-button ${isTrackingEnabled ? 'enabled' : 'disabled'}`}\r\n        onClick={handleTrackButtonClick}\r\n        disabled={!isTrackingEnabled}\r\n      >\r\n        🚑 Track Ambulance\r\n      </button>\r\n\r\n      {/* Estimated Time Display */}\r\n      <div id=\"time-display\" className=\"estimated-time\">\r\n        Estimated Arrival Time: {estimatedTime}\r\n      </div>\r\n\r\n      {/* Tracking Alert Pop-up */}\r\n      {showAlert && (\r\n        <div className=\"popup-alert\">\r\n          <div className=\"popup-content\">\r\n            <h3>🚨 Ambulance is On Its Way! 🚨</h3>\r\n            <p><strong>Starting Point:</strong> {ambulance.location}</p>\r\n            <p><strong>Your Location:</strong> {userAddress}</p>\r\n            <p><strong>Estimated Arrival Time:</strong> {estimatedTime}</p>\r\n            <button onClick={closeAlert} className=\"popup-close\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Success Alert */}\r\n      {bookingSuccess && (\r\n        <div className=\"popup-alert success\">\r\n          <div className=\"popup-content\">\r\n            <h3>✅ Booking Confirmed!</h3>\r\n            <p>Ambulance service request submitted successfully.</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AmbulanceDetailsPage;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAY,CAAC,GAAGN,SAAS,CAAC,CAAC;EACnC,MAAMO,SAAS,GAAGN,aAAa,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKC,QAAQ,CAACL,WAAW,CAAC,CAAC;EAC3E,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACgB,iBAAiB,EAAEC,oBAAoB,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}