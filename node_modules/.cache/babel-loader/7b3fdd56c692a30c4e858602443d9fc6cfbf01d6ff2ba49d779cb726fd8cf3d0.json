{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahab Siddique\\\\Desktop\\\\Doctro App\\\\doctro\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header'; // Correct import\nimport DoctorForm from './components/DoctorForm'; // Import DoctorForm\nimport PatientForm from './components/PatientForm'; // Import PatientForm\nimport SuccessPage from './pages/SuccessPage'; // Correct import for SuccessPage\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showForm, setShowForm] = useState(null); // State to show forms\n  const [isRegistered, setIsRegistered] = useState(false); // Track registration state\n\n  const handleFormSubmit = () => {\n    setIsRegistered(true); // Change the state to show success page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), isRegistered ? /*#__PURE__*/_jsxDEV(SuccessPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) // Show success page if registered\n    : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showForm === 'doctor' && /*#__PURE__*/_jsxDEV(DoctorForm, {\n        onSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 37\n      }, this), showForm === 'patient' && /*#__PURE__*/_jsxDEV(PatientForm, {\n        onSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sQiT4pBtcvnPv5fJaZ3j5rYZl0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","DoctorForm","PatientForm","SuccessPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showForm","setShowForm","isRegistered","setIsRegistered","handleFormSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Shahab Siddique/Desktop/Doctro App/doctro/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header'; // Correct import\r\nimport DoctorForm from './components/DoctorForm'; // Import DoctorForm\r\nimport PatientForm from './components/PatientForm'; // Import PatientForm\r\nimport SuccessPage from './pages/SuccessPage'; // Correct import for SuccessPage\r\n\r\nconst App = () => {\r\n  const [showForm, setShowForm] = useState(null); // State to show forms\r\n  const [isRegistered, setIsRegistered] = useState(false); // Track registration state\r\n\r\n  const handleFormSubmit = () => {\r\n    setIsRegistered(true); // Change the state to show success page\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n      {isRegistered ? (\r\n        <SuccessPage /> // Show success page if registered\r\n      ) : (\r\n        <>\r\n          {/* Display the form based on the button clicked */}\r\n          {showForm === 'doctor' && <DoctorForm onSubmit={handleFormSubmit} />}\r\n          {showForm === 'patient' && <PatientForm onSubmit={handleFormSubmit} />}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAC1C,OAAOC,UAAU,MAAM,yBAAyB,CAAC,CAAC;AAClD,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAC;AACpD,OAAOC,WAAW,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzD,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;IAC7BD,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACER,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBX,OAAA,CAACL,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAETR,YAAY,gBACXP,OAAA,CAACF,WAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAAA,eAEhBf,OAAA,CAAAE,SAAA;MAAAS,QAAA,GAEGN,QAAQ,KAAK,QAAQ,iBAAIL,OAAA,CAACJ,UAAU;QAACoB,QAAQ,EAAEP;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACnEV,QAAQ,KAAK,SAAS,iBAAIL,OAAA,CAACH,WAAW;QAACmB,QAAQ,EAAEP;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtE,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACX,EAAA,CAvBID,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}