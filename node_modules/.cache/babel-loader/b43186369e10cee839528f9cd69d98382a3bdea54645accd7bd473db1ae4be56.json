{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahab Siddique\\\\Desktop\\\\Doctro App\\\\doctro\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // All the styling is now in App.css\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [showOptions, setShowOptions] = useState(false); // State to toggle buttons\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login state\n\n  const handleLoginClick = () => {\n    if (isLoggedIn) {\n      setIsLoggedIn(false); // If logged in, show sign-up text\n    } else {\n      setShowOptions(!showOptions); // Toggle Doctor/Patient buttons on login click\n      setIsLoggedIn(true); // Mark user as logged in\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Doctro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-btn\",\n            onClick: handleLoginClick,\n            children: [isLoggedIn ? 'Sign Up' : 'Login', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), showOptions && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"doctor-btn\",\n              children: \"Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"patient-btn\",\n              children: \"Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"lIx8lfg6l5ZSUkILENInS9EeJY8=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","showOptions","setShowOptions","isLoggedIn","setIsLoggedIn","handleLoginClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shahab Siddique/Desktop/Doctro App/doctro/src/components/Header.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css'; // All the styling is now in App.css\r\n\r\nconst Header = () => {\r\n  const [showOptions, setShowOptions] = useState(false); // State to toggle buttons\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login state\r\n\r\n  const handleLoginClick = () => {\r\n    if (isLoggedIn) {\r\n      setIsLoggedIn(false); // If logged in, show sign-up text\r\n    } else {\r\n      setShowOptions(!showOptions); // Toggle Doctor/Patient buttons on login click\r\n      setIsLoggedIn(true); // Mark user as logged in\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"logo\">\r\n        <h1>Doctro</h1>\r\n      </div>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <button className=\"login-btn\" onClick={handleLoginClick}>\r\n              {isLoggedIn ? 'Sign Up' : 'Login'} {/* Toggle between Login and Sign Up */}\r\n            </button>\r\n          </li>\r\n          {showOptions && (\r\n            <>\r\n              <li>\r\n                <button className=\"doctor-btn\">Doctor</button>\r\n              </li>\r\n              <li>\r\n                <button className=\"patient-btn\">Patient</button>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIF,UAAU,EAAE;MACdC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IACxB,CAAC,MAAM;MACLF,cAAc,CAAC,CAACD,WAAW,CAAC,CAAC,CAAC;MAC9BG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAED,oBACER,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAKW,SAAS,EAAC,MAAM;MAAAD,QAAA,eACnBV,OAAA;QAAAU,QAAA,EAAI;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACNf,OAAA;MAAAU,QAAA,eACEV,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,eACEV,OAAA;YAAQW,SAAS,EAAC,WAAW;YAACK,OAAO,EAAEP,gBAAiB;YAAAC,QAAA,GACrDH,UAAU,GAAG,SAAS,GAAG,OAAO,EAAC,GAAC;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,EACJV,WAAW,iBACVL,OAAA,CAAAE,SAAA;UAAAQ,QAAA,gBACEV,OAAA;YAAAU,QAAA,eACEV,OAAA;cAAQW,SAAS,EAAC,YAAY;cAAAD,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACLf,OAAA;YAAAU,QAAA,eACEV,OAAA;cAAQW,SAAS,EAAC,aAAa;cAAAD,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA,eACL,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACX,EAAA,CAvCID,MAAM;AAAAc,EAAA,GAANd,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}